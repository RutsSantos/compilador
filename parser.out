Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> program
Rule 1     program -> function
Rule 2     function -> INT ID LPAREN RPAREN LBRACE statement_list RBRACE
Rule 3     statement_list -> statement_list statement
Rule 4     statement_list -> statement
Rule 5     statement -> var_declaration
Rule 6     statement -> return_statement
Rule 7     var_declaration -> INT ID EQUAL expression SEMICOLON
Rule 8     return_statement -> RETURN expression SEMICOLON
Rule 9     expression -> expression PLUS term
Rule 10    expression -> expression MINUS term
Rule 11    expression -> term
Rule 12    term -> term TIMES factor
Rule 13    term -> term DIVIDE factor
Rule 14    term -> factor
Rule 15    factor -> NUMBER
Rule 16    factor -> ID

Terminals, with rules where they appear

DIVIDE               : 13
EQUAL                : 7
ID                   : 2 7 16
INT                  : 2 7
LBRACE               : 2
LPAREN               : 2
MINUS                : 10
NUMBER               : 15
PLUS                 : 9
RBRACE               : 2
RETURN               : 8
RPAREN               : 2
SEMICOLON            : 7 8
TIMES                : 12
error                : 

Nonterminals, with rules where they appear

expression           : 7 8 9 10
factor               : 12 13 14
function             : 1
program              : 0
return_statement     : 6
statement            : 3 4
statement_list       : 2 3
term                 : 9 10 11 12 13
var_declaration      : 5

Parsing method: LALR

state 0

    (0) S' -> . program
    (1) program -> . function
    (2) function -> . INT ID LPAREN RPAREN LBRACE statement_list RBRACE

    INT             shift and go to state 3

    program                        shift and go to state 1
    function                       shift and go to state 2

state 1

    (0) S' -> program .



state 2

    (1) program -> function .

    $end            reduce using rule 1 (program -> function .)


state 3

    (2) function -> INT . ID LPAREN RPAREN LBRACE statement_list RBRACE

    ID              shift and go to state 4


state 4

    (2) function -> INT ID . LPAREN RPAREN LBRACE statement_list RBRACE

    LPAREN          shift and go to state 5


state 5

    (2) function -> INT ID LPAREN . RPAREN LBRACE statement_list RBRACE

    RPAREN          shift and go to state 6


state 6

    (2) function -> INT ID LPAREN RPAREN . LBRACE statement_list RBRACE

    LBRACE          shift and go to state 7


state 7

    (2) function -> INT ID LPAREN RPAREN LBRACE . statement_list RBRACE
    (3) statement_list -> . statement_list statement
    (4) statement_list -> . statement
    (5) statement -> . var_declaration
    (6) statement -> . return_statement
    (7) var_declaration -> . INT ID EQUAL expression SEMICOLON
    (8) return_statement -> . RETURN expression SEMICOLON

    INT             shift and go to state 8
    RETURN          shift and go to state 13

    statement_list                 shift and go to state 9
    statement                      shift and go to state 10
    var_declaration                shift and go to state 11
    return_statement               shift and go to state 12

state 8

    (7) var_declaration -> INT . ID EQUAL expression SEMICOLON

    ID              shift and go to state 14


state 9

    (2) function -> INT ID LPAREN RPAREN LBRACE statement_list . RBRACE
    (3) statement_list -> statement_list . statement
    (5) statement -> . var_declaration
    (6) statement -> . return_statement
    (7) var_declaration -> . INT ID EQUAL expression SEMICOLON
    (8) return_statement -> . RETURN expression SEMICOLON

    RBRACE          shift and go to state 15
    INT             shift and go to state 8
    RETURN          shift and go to state 13

    statement                      shift and go to state 16
    var_declaration                shift and go to state 11
    return_statement               shift and go to state 12

state 10

    (4) statement_list -> statement .

    RBRACE          reduce using rule 4 (statement_list -> statement .)
    INT             reduce using rule 4 (statement_list -> statement .)
    RETURN          reduce using rule 4 (statement_list -> statement .)


state 11

    (5) statement -> var_declaration .

    RBRACE          reduce using rule 5 (statement -> var_declaration .)
    INT             reduce using rule 5 (statement -> var_declaration .)
    RETURN          reduce using rule 5 (statement -> var_declaration .)


state 12

    (6) statement -> return_statement .

    RBRACE          reduce using rule 6 (statement -> return_statement .)
    INT             reduce using rule 6 (statement -> return_statement .)
    RETURN          reduce using rule 6 (statement -> return_statement .)


state 13

    (8) return_statement -> RETURN . expression SEMICOLON
    (9) expression -> . expression PLUS term
    (10) expression -> . expression MINUS term
    (11) expression -> . term
    (12) term -> . term TIMES factor
    (13) term -> . term DIVIDE factor
    (14) term -> . factor
    (15) factor -> . NUMBER
    (16) factor -> . ID

    NUMBER          shift and go to state 20
    ID              shift and go to state 21

    expression                     shift and go to state 17
    term                           shift and go to state 18
    factor                         shift and go to state 19

state 14

    (7) var_declaration -> INT ID . EQUAL expression SEMICOLON

    EQUAL           shift and go to state 22


state 15

    (2) function -> INT ID LPAREN RPAREN LBRACE statement_list RBRACE .

    $end            reduce using rule 2 (function -> INT ID LPAREN RPAREN LBRACE statement_list RBRACE .)


state 16

    (3) statement_list -> statement_list statement .

    RBRACE          reduce using rule 3 (statement_list -> statement_list statement .)
    INT             reduce using rule 3 (statement_list -> statement_list statement .)
    RETURN          reduce using rule 3 (statement_list -> statement_list statement .)


state 17

    (8) return_statement -> RETURN expression . SEMICOLON
    (9) expression -> expression . PLUS term
    (10) expression -> expression . MINUS term

    SEMICOLON       shift and go to state 23
    PLUS            shift and go to state 24
    MINUS           shift and go to state 25


state 18

    (11) expression -> term .
    (12) term -> term . TIMES factor
    (13) term -> term . DIVIDE factor

    SEMICOLON       reduce using rule 11 (expression -> term .)
    PLUS            reduce using rule 11 (expression -> term .)
    MINUS           reduce using rule 11 (expression -> term .)
    TIMES           shift and go to state 26
    DIVIDE          shift and go to state 27


state 19

    (14) term -> factor .

    TIMES           reduce using rule 14 (term -> factor .)
    DIVIDE          reduce using rule 14 (term -> factor .)
    SEMICOLON       reduce using rule 14 (term -> factor .)
    PLUS            reduce using rule 14 (term -> factor .)
    MINUS           reduce using rule 14 (term -> factor .)


state 20

    (15) factor -> NUMBER .

    TIMES           reduce using rule 15 (factor -> NUMBER .)
    DIVIDE          reduce using rule 15 (factor -> NUMBER .)
    SEMICOLON       reduce using rule 15 (factor -> NUMBER .)
    PLUS            reduce using rule 15 (factor -> NUMBER .)
    MINUS           reduce using rule 15 (factor -> NUMBER .)


state 21

    (16) factor -> ID .

    TIMES           reduce using rule 16 (factor -> ID .)
    DIVIDE          reduce using rule 16 (factor -> ID .)
    SEMICOLON       reduce using rule 16 (factor -> ID .)
    PLUS            reduce using rule 16 (factor -> ID .)
    MINUS           reduce using rule 16 (factor -> ID .)


state 22

    (7) var_declaration -> INT ID EQUAL . expression SEMICOLON
    (9) expression -> . expression PLUS term
    (10) expression -> . expression MINUS term
    (11) expression -> . term
    (12) term -> . term TIMES factor
    (13) term -> . term DIVIDE factor
    (14) term -> . factor
    (15) factor -> . NUMBER
    (16) factor -> . ID

    NUMBER          shift and go to state 20
    ID              shift and go to state 21

    expression                     shift and go to state 28
    term                           shift and go to state 18
    factor                         shift and go to state 19

state 23

    (8) return_statement -> RETURN expression SEMICOLON .

    RBRACE          reduce using rule 8 (return_statement -> RETURN expression SEMICOLON .)
    INT             reduce using rule 8 (return_statement -> RETURN expression SEMICOLON .)
    RETURN          reduce using rule 8 (return_statement -> RETURN expression SEMICOLON .)


state 24

    (9) expression -> expression PLUS . term
    (12) term -> . term TIMES factor
    (13) term -> . term DIVIDE factor
    (14) term -> . factor
    (15) factor -> . NUMBER
    (16) factor -> . ID

    NUMBER          shift and go to state 20
    ID              shift and go to state 21

    term                           shift and go to state 29
    factor                         shift and go to state 19

state 25

    (10) expression -> expression MINUS . term
    (12) term -> . term TIMES factor
    (13) term -> . term DIVIDE factor
    (14) term -> . factor
    (15) factor -> . NUMBER
    (16) factor -> . ID

    NUMBER          shift and go to state 20
    ID              shift and go to state 21

    term                           shift and go to state 30
    factor                         shift and go to state 19

state 26

    (12) term -> term TIMES . factor
    (15) factor -> . NUMBER
    (16) factor -> . ID

    NUMBER          shift and go to state 20
    ID              shift and go to state 21

    factor                         shift and go to state 31

state 27

    (13) term -> term DIVIDE . factor
    (15) factor -> . NUMBER
    (16) factor -> . ID

    NUMBER          shift and go to state 20
    ID              shift and go to state 21

    factor                         shift and go to state 32

state 28

    (7) var_declaration -> INT ID EQUAL expression . SEMICOLON
    (9) expression -> expression . PLUS term
    (10) expression -> expression . MINUS term

    SEMICOLON       shift and go to state 33
    PLUS            shift and go to state 24
    MINUS           shift and go to state 25


state 29

    (9) expression -> expression PLUS term .
    (12) term -> term . TIMES factor
    (13) term -> term . DIVIDE factor

    SEMICOLON       reduce using rule 9 (expression -> expression PLUS term .)
    PLUS            reduce using rule 9 (expression -> expression PLUS term .)
    MINUS           reduce using rule 9 (expression -> expression PLUS term .)
    TIMES           shift and go to state 26
    DIVIDE          shift and go to state 27


state 30

    (10) expression -> expression MINUS term .
    (12) term -> term . TIMES factor
    (13) term -> term . DIVIDE factor

    SEMICOLON       reduce using rule 10 (expression -> expression MINUS term .)
    PLUS            reduce using rule 10 (expression -> expression MINUS term .)
    MINUS           reduce using rule 10 (expression -> expression MINUS term .)
    TIMES           shift and go to state 26
    DIVIDE          shift and go to state 27


state 31

    (12) term -> term TIMES factor .

    TIMES           reduce using rule 12 (term -> term TIMES factor .)
    DIVIDE          reduce using rule 12 (term -> term TIMES factor .)
    SEMICOLON       reduce using rule 12 (term -> term TIMES factor .)
    PLUS            reduce using rule 12 (term -> term TIMES factor .)
    MINUS           reduce using rule 12 (term -> term TIMES factor .)


state 32

    (13) term -> term DIVIDE factor .

    TIMES           reduce using rule 13 (term -> term DIVIDE factor .)
    DIVIDE          reduce using rule 13 (term -> term DIVIDE factor .)
    SEMICOLON       reduce using rule 13 (term -> term DIVIDE factor .)
    PLUS            reduce using rule 13 (term -> term DIVIDE factor .)
    MINUS           reduce using rule 13 (term -> term DIVIDE factor .)


state 33

    (7) var_declaration -> INT ID EQUAL expression SEMICOLON .

    RBRACE          reduce using rule 7 (var_declaration -> INT ID EQUAL expression SEMICOLON .)
    INT             reduce using rule 7 (var_declaration -> INT ID EQUAL expression SEMICOLON .)
    RETURN          reduce using rule 7 (var_declaration -> INT ID EQUAL expression SEMICOLON .)

